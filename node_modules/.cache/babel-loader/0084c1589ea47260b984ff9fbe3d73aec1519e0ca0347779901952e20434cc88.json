{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M TECH\\\\Documents\\\\GitHub\\\\Vistara\\\\src\\\\components\\\\ReviewLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Nav from './Nav'; // Assuming Nav component is defined in Nav.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [data, setData] = useState({\n    email: '',\n    password: ''\n  });\n  const logx = e => {\n    e.preventDefault();\n    const a = localStorage.getItem('email');\n    const b = localStorage.getItem('pass');\n    if (a === data.email && b === data.password) {\n      // Check if the user is an admin or regular user (you can use a flag or role for this)\n      const isAdmin = data.email === 'admin@example.com'; // Example: Change this condition based on your logic\n      if (isAdmin) {\n        navigate('/AdDashboard'); // Navigate to the admin dashboard\n      } else {\n        navigate('/Dashboard'); // Navigate to the regular user dashboard\n      }\n    } else {\n      alert('Invalid Credentials');\n    }\n  };\n  const handleChange = e => {\n    setData({\n      ...data,\n      [e.target.id]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-control\",\n      onSubmit: logx,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        placeholder: \"Enter your email\",\n        name: \"Email\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 110\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        placeholder: \"Enter your password\",\n        name: \"password\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 122\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"enter\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"5tPxVfS8zktzNlvA2eioUv9mRYI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Link","Button","Nav","jsxDEV","_jsxDEV","Login","_s","navigate","data","setData","email","password","logx","e","preventDefault","a","localStorage","getItem","b","isAdmin","alert","handleChange","target","id","value","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","name","onChange","_c","$RefreshReg$"],"sources":["C:/Users/M TECH/Documents/GitHub/Vistara/src/components/ReviewLogin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@mui/material/Button';\r\nimport Nav from './Nav'; // Assuming Nav component is defined in Nav.js\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const logx = (e) => {\r\n    e.preventDefault();\r\n    const a = localStorage.getItem('email');\r\n    const b = localStorage.getItem('pass');\r\n    if (a === data.email && b === data.password) {\r\n      // Check if the user is an admin or regular user (you can use a flag or role for this)\r\n      const isAdmin = data.email === 'admin@example.com'; // Example: Change this condition based on your logic\r\n      if (isAdmin) {\r\n        navigate('/AdDashboard'); // Navigate to the admin dashboard\r\n      } else {\r\n        navigate('/Dashboard'); // Navigate to the regular user dashboard\r\n      }\r\n    } else {\r\n      alert('Invalid Credentials');\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setData({ ...data, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"form-control\" onSubmit={logx}>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input type=\"email\" id=\"email\" placeholder=\"Enter your email\" name=\"Email\" onChange={handleChange} /><br />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" placeholder=\"Enter your password\" name=\"password\" onChange={handleChange} /><br />\r\n        <button className=\"enter\" type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}